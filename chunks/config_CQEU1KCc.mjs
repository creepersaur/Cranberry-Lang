const astroConfig = {"base":"//","root":"file:///D:/Coding/Cranberry/_CranberryDocs/","srcDir":"file:///D:/Coding/Cranberry/_CranberryDocs/src/","build":{"assets":"_astro"},"markdown":{"shikiConfig":{"langs":[]}}};
const ecIntegrationOptions = {"shiki":{"langs":[{"default":{"name":"cranberry","patterns":[{"match":"(?<!\\S)#.*$","name":"comment.line.number-sign.cranberry"},{"match":"\\b(?:number|string|bool|dict|list|List|Dict)\\b","name":"entity.name.class.cranberry"},{"match":"\\b(?:fn|class|include|loop|namespace|constructor|using|let|if|else|for|while|return|in|break|as|out|continue|switch)\\b","name":"keyword.control.cranberry"},{"match":"\\b([A-Za-z_][A-Za-z0-9_]*?)\\s*(?=\\()","name":"meta.function-call.cranberry"},{"match":"[A-Z]+[A-z_a-z0-9]*","name":"entity.name.class"},{"match":"\\@|\\.\\.|\\b0x[0-9A-Fa-f]+\\b|\\b\\d+\\.\\d+\\b|\\b\\d+\\b","name":"constant.numeric.cranberry"},{"begin":"(\\$)\"","beginCaptures":{"1":{"name":"constant.numeric.cranberry"}},"end":"\"","name":"string.quoted.interpolated.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"},{"begin":"\\{","end":"\\}","name":"variable.interpolated.cranberry","patterns":[{"match":"\\b0x[0-9A-Fa-f]+\\b|\\b\\d+\\.\\d+\\b|\\b\\d+\\b","name":"constant.numeric.cranberry"},{"match":"\\b[A-Za-z_][A-Za-z0-9_]*\\s*(?=\\()","name":"entity.name.function.call.cranberry"},{"match":"\\b(?:fn|let|if|else|for|while|return|in|break|continue|switch|case|default)\\b","name":"keyword.control.cranberry"},{"match":"[+\\-*/%=<>!&|:^~]+","name":"keyword.operator.cranberry"},{"match":"[(){}\\[\\],.;]","name":"punctuation.separator.brackets.cranberry"}]}]},{"match":"\\b(?:true|false|nil|self)\\b","name":"constant.language.boolean.cranberry"},{"begin":"\"","end":"\"","name":"string.quoted.double.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"}]},{"begin":"'","end":"'","name":"string.quoted.single.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"}]},{"match":"[+\\-*/%=<>?!&|:^~]+","name":"keyword.operator.cranberry"},{"match":"[(){}\\[\\],.;]","name":"punctuation.separator.brackets.cranberry"},{"match":"@","name":"punctuation.operator.at.cranberry"}],"scopeName":"source.cranberry"},"name":"cranberry","patterns":[{"match":"(?<!\\S)#.*$","name":"comment.line.number-sign.cranberry"},{"match":"\\b(?:number|string|bool|dict|list|List|Dict)\\b","name":"entity.name.class.cranberry"},{"match":"\\b(?:fn|class|include|loop|namespace|constructor|using|let|if|else|for|while|return|in|break|as|out|continue|switch)\\b","name":"keyword.control.cranberry"},{"match":"\\b([A-Za-z_][A-Za-z0-9_]*?)\\s*(?=\\()","name":"meta.function-call.cranberry"},{"match":"[A-Z]+[A-z_a-z0-9]*","name":"entity.name.class"},{"match":"\\@|\\.\\.|\\b0x[0-9A-Fa-f]+\\b|\\b\\d+\\.\\d+\\b|\\b\\d+\\b","name":"constant.numeric.cranberry"},{"begin":"(\\$)\"","beginCaptures":{"1":{"name":"constant.numeric.cranberry"}},"end":"\"","name":"string.quoted.interpolated.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"},{"begin":"\\{","end":"\\}","name":"variable.interpolated.cranberry","patterns":[{"match":"\\b0x[0-9A-Fa-f]+\\b|\\b\\d+\\.\\d+\\b|\\b\\d+\\b","name":"constant.numeric.cranberry"},{"match":"\\b[A-Za-z_][A-Za-z0-9_]*\\s*(?=\\()","name":"entity.name.function.call.cranberry"},{"match":"\\b(?:fn|let|if|else|for|while|return|in|break|continue|switch|case|default)\\b","name":"keyword.control.cranberry"},{"match":"[+\\-*/%=<>!&|:^~]+","name":"keyword.operator.cranberry"},{"match":"[(){}\\[\\],.;]","name":"punctuation.separator.brackets.cranberry"}]}]},{"match":"\\b(?:true|false|nil|self)\\b","name":"constant.language.boolean.cranberry"},{"begin":"\"","end":"\"","name":"string.quoted.double.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"}]},{"begin":"'","end":"'","name":"string.quoted.single.cranberry","patterns":[{"match":"\\\\.","name":"constant.character.escape.cranberry"}]},{"match":"[+\\-*/%=<>?!&|:^~]+","name":"keyword.operator.cranberry"},{"match":"[(){}\\[\\],.;]","name":"punctuation.separator.brackets.cranberry"},{"match":"@","name":"punctuation.operator.at.cranberry"}],"scopeName":"source.cranberry"}]},"styleOverrides":{"borderRadius":"0.3rem"},"tabWidth":4};
let ecConfigFileOptions = {};
try {
	ecConfigFileOptions = (await import('./ec-config_CzTTOeiV.mjs')).default;
} catch (e) {
	console.error('*** Failed to load Expressive Code config file "file:///D:/Coding/Cranberry/_CranberryDocs/ec.config.mjs". You can ignore this message if you just renamed/removed the file.\n\n(Full error message: "' + (e?.message || e) + '")\n');
}

export { astroConfig, ecConfigFileOptions, ecIntegrationOptions };
